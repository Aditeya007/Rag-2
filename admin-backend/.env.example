# =============================================================================
# ADMIN BACKEND ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all required and optional environment variables.
# Copy this file to .env and update the values for your environment.
# NEVER commit the actual .env file to version control!
#
# Quick Start:
#   1. cp .env.example .env
#   2. Update all values marked as REQUIRED
#   3. Generate secure secrets for JWT_SECRET
#   4. Update URLs to match your deployment
# =============================================================================

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------

# Port number for the Express server
# Default: 5000 (development), use 8080 or 3000 for production
PORT=5000

# Node environment: development, production, or test
# CRITICAL: Set to 'production' in production to disable debug features
# and enable security optimizations
NODE_ENV=development

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------

# MongoDB connection string
# REQUIRED: This must be set or the application will not start
#
# Local Development:
#   mongodb://localhost:27017/rag-admin
#
# MongoDB Atlas (Production):
#   mongodb+srv://username:password@cluster.mongodb.net/rag-admin?retryWrites=true&w=majority
#
# Security Note: Ensure MongoDB user has minimal required permissions
MONGO_URI=mongodb://localhost:27017/rag-admin

# -----------------------------------------------------------------------------
# AUTHENTICATION & SECURITY (REQUIRED)
# -----------------------------------------------------------------------------

# JWT Secret Key for signing authentication tokens
# REQUIRED: Must be a strong, random string
# CRITICAL: Change this in production! Never use default values!
#
# Generate a secure secret:
#   node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#   OR
#   openssl rand -hex 64
#
# Security: Keep this secret! If compromised, all tokens can be forged
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT token expiration time
# Format: '1d' (1 day), '7d' (7 days), '1h' (1 hour), '30m' (30 minutes)
# Default: 1d
# Recommendation: Use shorter expiration for better security, implement refresh tokens for longer sessions
JWT_EXPIRATION=1d

# Bcrypt salt rounds for password hashing
# Higher = more secure but slower
# Recommended: 10-12 for production
# Default: 10
BCRYPT_SALT_ROUNDS=10

# -----------------------------------------------------------------------------
# CORS CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------

# Allowed origins for Cross-Origin Resource Sharing (CORS)
# REQUIRED: Comma-separated list of allowed frontend origins
# CRITICAL: NEVER use "*" in production! Specify exact origins.
#
# Development (multiple frontends):
#   http://localhost:3000,http://localhost:3001
#
# Production (specific domains only):
#   https://yourdomain.com,https://admin.yourdomain.com
#
# Security: Only include origins you control
CORS_ORIGIN=http://localhost:3000,http://localhost:3001

# -----------------------------------------------------------------------------
# FASTAPI BOT SERVICE (REQUIRED)
# -----------------------------------------------------------------------------

# URL of your Python FastAPI RAG chatbot backend
# REQUIRED: The application will warn if this is not set
#
# Local Development:
#   http://localhost:8000
#
# Production (same network):
#   http://fastapi-service:8000
#
# Production (external):
#   https://api.yourdomain.com
#
# Note: Ensure this service is accessible from the admin backend
FASTAPI_BOT_URL=http://localhost:8000

# Shared secret for authenticating with the FastAPI bot service
# OPTIONAL: Strongly recommended for production deployments
# Match the value configured in BOT/.env or the FastAPI deployment
# Note: Leaving this unset or at "change-me" disables enforcement for local development
# FASTAPI_SHARED_SECRET=change-me

# Bot request timeout in milliseconds
# How long to wait for the FastAPI bot to respond
# Default: 30000 (30 seconds)
# Adjust based on your bot's average response time
BOT_REQUEST_TIMEOUT=30000

# -----------------------------------------------------------------------------
# OPTIONAL CONFIGURATION
# -----------------------------------------------------------------------------

# Logging level: debug, info, warn, error
# Default: info (production), debug (development)
# LOG_LEVEL=info

# Maximum request body size
# Default: 10mb
# Increase if handling large payloads
# MAX_REQUEST_SIZE=10mb

# Optional overrides for generated resources
# These control the default URIs used when provisioning a new user's services.
# Leave unset to use the development-friendly localhost values shown below.
# DEFAULT_DATABASE_URI_BASE=mongodb://localhost:27017
# DEFAULT_BOT_BASE_URL=http://localhost:8000
# DEFAULT_SCHEDULER_BASE_URL=http://localhost:9000
# DEFAULT_SCRAPER_BASE_URL=http://localhost:7000
# DEFAULT_VECTOR_BASE_PATH=./storage/vector-stores

# Tenant context cache TTL in milliseconds (default: 60000)
# USER_CONTEXT_CACHE_TTL_MS=60000

# Rate limiting window (milliseconds)
# Default: 900000 (15 minutes)
# RATE_LIMIT_WINDOW=900000

# Maximum requests per window for auth endpoints
# Default: 5
# AUTH_RATE_LIMIT_MAX=5

# Maximum requests per window for bot endpoints
# Default: 10
# BOT_RATE_LIMIT_MAX=10

# -----------------------------------------------------------------------------
# PRODUCTION CHECKLIST
# -----------------------------------------------------------------------------
# Before deploying to production, ensure:
#   ✓ NODE_ENV is set to 'production'
#   ✓ JWT_SECRET is a strong, randomly generated secret (NOT the example value)
#   ✓ MONGO_URI points to your production database with proper authentication
#   ✓ CORS_ORIGIN contains only your production frontend domains (NO wildcards)
#   ✓ FASTAPI_BOT_URL points to your production bot service
#   ✓ All passwords/secrets are stored securely (not in code or public repos)
#   ✓ MongoDB user has minimal required permissions
#   ✓ SSL/TLS is enabled for all external connections
#   ✓ Firewall rules are configured to restrict access
#   ✓ Regular backups are configured for MongoDB
# =============================================================================
